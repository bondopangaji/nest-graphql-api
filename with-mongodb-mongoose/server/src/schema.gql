# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""
Breed schema
"""
type Breed {
  _id: String!
  name: String!
}

"""
Cat schema
"""
type Cat {
  _id: String!
  name: String!
  date_of_birth: DateTime!
  sex: Sex!
  breed(populate: Boolean!): Breed!
  description: String!
  note: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
Enum to determine sex of cat or kitten
"""
enum Sex {
  MALE
  FEMALE
}

type Query {
  getAllCat: [Cat!]!
  getCatById(id: String!): Cat!
  getAllBreed: [Breed!]!
  getBreedById(_id: String!): Breed!
}

type Mutation {
  createCat(createCatInput: CreateCatInput!): Cat!
  updateCatById(updateCatInput: UpdateCatInput!): Cat!
  deleteCatById(id: String!): Cat!
  createBreed(createBreedInput: CreateBreedInput!): Breed!
  updateBreedById(updateBreedInput: UpdateBreedInput!): Breed!
  deleteBreedById(id: String!): Breed!
}

input CreateCatInput {
  name: String!
  date_of_birth: DateTime!
  sex: Sex!
  breed: String!
  description: String!
  note: String!
}

input UpdateCatInput {
  name: String
  date_of_birth: DateTime
  sex: Sex
  breed: String
  description: String
  note: String
  _id: String!
}

input CreateBreedInput {
  name: String!
}

input UpdateBreedInput {
  name: String
  _id: String!
}
